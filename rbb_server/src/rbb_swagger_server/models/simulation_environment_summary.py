# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rbb_swagger_server.models.base_model_ import Model
from rbb_swagger_server import util


class SimulationEnvironmentSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, detail_type: str=None, name: str=None, module_name: str=None, rosbag_store: str=None):  # noqa: E501
        """SimulationEnvironmentSummary - a model defined in Swagger

        :param detail_type: The detail_type of this SimulationEnvironmentSummary.  # noqa: E501
        :type detail_type: str
        :param name: The name of this SimulationEnvironmentSummary.  # noqa: E501
        :type name: str
        :param module_name: The module_name of this SimulationEnvironmentSummary.  # noqa: E501
        :type module_name: str
        :param rosbag_store: The rosbag_store of this SimulationEnvironmentSummary.  # noqa: E501
        :type rosbag_store: str
        """
        self.swagger_types = {
            'detail_type': str,
            'name': str,
            'module_name': str,
            'rosbag_store': str
        }

        self.attribute_map = {
            'detail_type': 'detail_type',
            'name': 'name',
            'module_name': 'module_name',
            'rosbag_store': 'rosbag_store'
        }

        self._detail_type = detail_type
        self._name = name
        self._module_name = module_name
        self._rosbag_store = rosbag_store

    @classmethod
    def from_dict(cls, dikt) -> 'SimulationEnvironmentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimulationEnvironmentSummary of this SimulationEnvironmentSummary.  # noqa: E501
        :rtype: SimulationEnvironmentSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detail_type(self) -> str:
        """Gets the detail_type of this SimulationEnvironmentSummary.


        :return: The detail_type of this SimulationEnvironmentSummary.
        :rtype: str
        """
        return self._detail_type

    @detail_type.setter
    def detail_type(self, detail_type: str):
        """Sets the detail_type of this SimulationEnvironmentSummary.


        :param detail_type: The detail_type of this SimulationEnvironmentSummary.
        :type detail_type: str
        """
        if detail_type is None:
            raise ValueError("Invalid value for `detail_type`, must not be `None`")  # noqa: E501

        self._detail_type = detail_type

    @property
    def name(self) -> str:
        """Gets the name of this SimulationEnvironmentSummary.


        :return: The name of this SimulationEnvironmentSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SimulationEnvironmentSummary.


        :param name: The name of this SimulationEnvironmentSummary.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def module_name(self) -> str:
        """Gets the module_name of this SimulationEnvironmentSummary.


        :return: The module_name of this SimulationEnvironmentSummary.
        :rtype: str
        """
        return self._module_name

    @module_name.setter
    def module_name(self, module_name: str):
        """Sets the module_name of this SimulationEnvironmentSummary.


        :param module_name: The module_name of this SimulationEnvironmentSummary.
        :type module_name: str
        """
        if module_name is None:
            raise ValueError("Invalid value for `module_name`, must not be `None`")  # noqa: E501

        self._module_name = module_name

    @property
    def rosbag_store(self) -> str:
        """Gets the rosbag_store of this SimulationEnvironmentSummary.


        :return: The rosbag_store of this SimulationEnvironmentSummary.
        :rtype: str
        """
        return self._rosbag_store

    @rosbag_store.setter
    def rosbag_store(self, rosbag_store: str):
        """Sets the rosbag_store of this SimulationEnvironmentSummary.


        :param rosbag_store: The rosbag_store of this SimulationEnvironmentSummary.
        :type rosbag_store: str
        """

        self._rosbag_store = rosbag_store
